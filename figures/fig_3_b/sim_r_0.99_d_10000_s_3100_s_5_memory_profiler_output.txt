sim_r_0.99_d_10000_s_3100_s_5
running asap...
source .../home/BCCRC.CA/ssubedi/projects/experiments/asapp/figures/fig_3_b/data/sim_r_0.99_d_10000_s_3100_s_5*
Dataset : sim_r_0.99_d_10000_s_3100_s_5 , cells : 40300, genes : 17204
None
Generating common genes...
Merging datasets...
processing.../home/BCCRC.CA/ssubedi/projects/experiments/asapp/figures/fig_3_b/results/sim_r_0.99_d_10000_s_3100_s_5
processing...sim_r_0.99_d_10000_s_3100_s_5
completed.
994
908
(994, 1809)
(908, 1763)
Filename: /home/BCCRC.CA/ssubedi/projects/experiments/asapp/figures/fig_3_b/step2_nmf.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49    411.9 MiB    411.9 MiB           1   @profile
    50                                         def _asap(sample,data_size,wdir,n_topics,cluster_resolution):
    51                                         	
    52    446.8 MiB     34.9 MiB           1   	asappy.create_asap_data(sample,working_dirpath=wdir)
    53                                         	
    54    446.8 MiB      0.0 MiB           1   	number_batches = 1
    55    446.8 MiB      0.0 MiB           1   	asap_data_size = 25000
    56                                          
    57    446.8 MiB      0.0 MiB           1   	if data_size[0]>asap_data_size: 
    58    446.8 MiB      0.0 MiB           1   		number_batches = np.ceil(data_size[0]/asap_data_size)
    59                                           
    60    449.4 MiB      2.6 MiB           1   	asap_object = asappy.create_asap_object(sample=sample,data_size=asap_data_size,number_batches=number_batches,working_dirpath=wdir)
    61                                          
    62   3297.3 MiB   2847.9 MiB           1   	asappy.generate_pseudobulk(asap_object,tree_depth=10,normalize_pb='lscale')
    63   3296.0 MiB     -1.3 MiB           1   	asappy.asap_nmf(asap_object,num_factors=n_topics,seed=seed)
    64                                         
    65   3299.1 MiB      3.0 MiB           1   	asap_adata = asappy.generate_model(asap_object,return_object=True)
    66                                          	
    67   3798.2 MiB    499.1 MiB           1   	asappy.leiden_cluster(asap_adata,resolution=cluster_resolution)
    68                                         
    69   3800.9 MiB      2.7 MiB           1   	ct = getct(asap_adata.obs.index.values)
    70                                         
    71   3800.9 MiB      0.0 MiB           1   	cluster = asap_adata.obs.cluster.values
    72                                         
    73   3800.9 MiB      0.0 MiB           1   	s1  = calculate_purity(ct,cluster)
    74                                         
    75   3800.9 MiB      0.0 MiB           1   	s2,s3 = calc_score(ct,cluster)
    76                                         	
    77   3800.9 MiB      0.0 MiB           1   	return s1,s2,s3


running liger....
Filename: /home/BCCRC.CA/ssubedi/projects/experiments/asapp/figures/fig_3_b/step2_nmf.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    79   3801.2 MiB   3801.2 MiB           1   @profile
    80                                         def _ligerpipeline(data_file,K,cluster_resolution):
    81                                         
    82   3801.2 MiB      0.0 MiB           1   	from sklearn.model_selection import train_test_split
    83   3803.3 MiB      2.1 MiB           1   	import pyliger
    84                                          
    85   3803.3 MiB      0.0 MiB           1   	f = hf.File(data_file,'r')
    86   3803.3 MiB      0.0 MiB           1   	data_size = tuple(f['matrix']['shape'])
    87   9093.2 MiB   5289.8 MiB           1   	mtx = csr_matrix((f['matrix']['data'], f['matrix']['indices'], f['matrix']['indptr']), shape=data_size).toarray()
    88   9095.5 MiB      1.7 MiB       17207   	var = [x.decode('utf-8') for x in list(f['matrix']['features']['id']) ]
    89   9099.0 MiB      1.6 MiB       40303   	obs = [x.decode('utf-8') for x in list(f['matrix']['barcodes']) ]
    90   9098.1 MiB     -1.0 MiB           1   	f.close()
    91                                         
    92                                         
    93   9100.6 MiB      2.6 MiB           1   	adata = an.AnnData(mtx)
    94   9100.6 MiB      0.0 MiB           1   	dfvars = pd.DataFrame(var)
    95   9100.6 MiB      0.0 MiB           1   	dfobs = pd.DataFrame(obs)
    96   9099.2 MiB     -1.4 MiB           1   	adata.obs = dfobs
    97   9098.5 MiB     -0.8 MiB           1   	adata.var = dfvars
    98   9098.5 MiB      0.0 MiB           1   	adata.var.rename(columns={0:'gene'},inplace=True) 
    99   9098.5 MiB      0.0 MiB           1   	adata.obs.rename(columns={0:'cell'},inplace=True) 
   100   9098.5 MiB      0.0 MiB           1   	adata.obs.index.name = 'cell'
   101   9098.5 MiB      0.0 MiB           1   	adata.var.index.name = 'gene'
   102                                         
   103   9098.5 MiB      0.0 MiB           1   	test_size = 0.5
   104   9098.5 MiB      0.0 MiB           1   	adata_train, adata_test = train_test_split(adata, test_size=test_size, random_state=42)
   105                                         
   106  11744.4 MiB   2645.9 MiB           1   	adata_train.uns['sample_name'] = 'train'
   107  14391.6 MiB   2647.2 MiB           1   	adata_test.uns['sample_name'] = 'test'
   108  14391.6 MiB      0.0 MiB           1   	adata_list = [adata_train,adata_test]
   109                                         
   110                                         
   111  15130.2 MiB    738.7 MiB           1   	ifnb_liger = pyliger.create_liger(adata_list,remove_missing=False)
   112                                          
   113  15867.0 MiB    736.7 MiB           1   	pyliger.normalize(ifnb_liger)
   114                                          
   115  10577.6 MiB  -5289.3 MiB           1   	pyliger.select_genes(ifnb_liger)
   116                                         	
   117  10577.6 MiB      0.0 MiB           1   	gene_use = 2000
   118  10577.6 MiB      0.0 MiB           1   	ifnb_liger.adata_list[0].uns['var_gene_idx'] = ifnb_liger.adata_list[0].var['norm_var'].sort_values(ascending=False).index.values[:gene_use]
   119  10577.6 MiB      0.0 MiB           1   	ifnb_liger.adata_list[1].uns['var_gene_idx'] = ifnb_liger.adata_list[1].var['norm_var'].sort_values(ascending=False).index.values[:gene_use]
   120  10577.6 MiB      0.0 MiB           1   	ifnb_liger.var_genes = np.union1d(ifnb_liger.adata_list[0].uns['var_gene_idx'],ifnb_liger.adata_list[1].uns['var_gene_idx'])
   121                                           
   122  14996.5 MiB   4418.8 MiB           1   	pyliger.scale_not_center(ifnb_liger)
   123  14271.5 MiB   -724.9 MiB           1   	pyliger.optimize_ALS(ifnb_liger, k = K,rand_seed=seed)
   124  13548.0 MiB   -723.5 MiB           1   	pyliger.quantile_norm(ifnb_liger)
   125  13638.5 MiB     90.5 MiB           1   	pyliger.leiden_cluster(ifnb_liger,resolution=cluster_resolution)
   126                                         
   127  13638.5 MiB      0.0 MiB           1   	obs = list(ifnb_liger.adata_list[0].obs.cell.values) + list(ifnb_liger.adata_list[1].obs.cell.values)
   128  13638.5 MiB      0.0 MiB           1   	cluster = list(ifnb_liger.adata_list[0].obs.cluster.values) + list(ifnb_liger.adata_list[1].obs.cluster.values)
   129                                         	
   130  13640.6 MiB      2.1 MiB           1   	ct = getct(obs)
   131                                         
   132  13640.8 MiB      0.3 MiB           1   	s1  = calculate_purity(ct,cluster)
   133                                         
   134  13640.8 MiB      0.0 MiB           1   	s2,s3 = calc_score(ct,cluster)
   135                                         	
   136  13640.8 MiB      0.0 MiB           1   	return s1,s2,s3


